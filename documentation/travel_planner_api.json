{
    "openapi": "3.0.0",
    "info": {
        "title": "travel_planner_api",
        "description": "An empty conduit application.",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8888"
        }
    ],
    "paths": {
        "/heroes": {},
        "/example": {},
        "/auth/token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "grant",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "grant_type"
                                ],
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "refresh_token": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "grant_type": {
                                        "type": "string"
                                    },
                                    "scope": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully exchanged credentials for token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        },
                                        "refresh_token": {
                                            "type": "string"
                                        },
                                        "scope": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials or missing parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oauth2-client-authentication": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "getUsers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "$ref": "#/components/responses/MalformedAuthorizationHeader"
                    },
                    "401": {
                        "$ref": "#/components/responses/InsufficientAccess"
                    },
                    "403": {
                        "$ref": "#/components/responses/InsufficientScope"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "createUser",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "$ref": "#/components/responses/MalformedAuthorizationHeader"
                    },
                    "401": {
                        "$ref": "#/components/responses/InsufficientAccess"
                    },
                    "403": {
                        "$ref": "#/components/responses/InsufficientScope"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "explode": false,
                    "allowReserved": false
                }
            ],
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response."
                    },
                    "400": {
                        "$ref": "#/components/responses/MalformedAuthorizationHeader"
                    },
                    "401": {
                        "$ref": "#/components/responses/InsufficientAccess"
                    },
                    "403": {
                        "$ref": "#/components/responses/InsufficientScope"
                    }
                },
                "security": [
                    {
                        "oauth2": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ManagedAuthClient": {
                "title": "ManagedAuthClient",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "string",
                        "description": "This is the primary identifier for this object.\n",
                        "nullable": false
                    },
                    "hashedSecret": {
                        "title": "hashedSecret",
                        "type": "string",
                        "nullable": true
                    },
                    "salt": {
                        "title": "salt",
                        "type": "string",
                        "nullable": true
                    },
                    "redirectURI": {
                        "title": "redirectURI",
                        "type": "string",
                        "nullable": true
                    },
                    "allowedScope": {
                        "title": "allowedScope",
                        "type": "string",
                        "nullable": true
                    },
                    "tokens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ManagedAuthToken"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "description": ""
            },
            "ManagedAuthToken": {
                "title": "ManagedAuthToken",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "integer",
                        "description": "This is the primary identifier for this object.\n",
                        "nullable": false
                    },
                    "code": {
                        "title": "code",
                        "type": "string",
                        "description": "No two objects may have the same value for this field.\n",
                        "nullable": true
                    },
                    "accessToken": {
                        "title": "accessToken",
                        "type": "string",
                        "description": "No two objects may have the same value for this field.\n",
                        "nullable": true
                    },
                    "refreshToken": {
                        "title": "refreshToken",
                        "type": "string",
                        "description": "No two objects may have the same value for this field.\n",
                        "nullable": true
                    },
                    "scope": {
                        "title": "scope",
                        "type": "string",
                        "nullable": true
                    },
                    "issueDate": {
                        "title": "issueDate",
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    },
                    "expirationDate": {
                        "title": "expirationDate",
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    },
                    "type": {
                        "title": "type",
                        "type": "string",
                        "nullable": true
                    },
                    "resourceOwner": {
                        "title": "resourceOwner",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        }
                    },
                    "client": {
                        "title": "client",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": ""
            },
            "User": {
                "title": "User",
                "type": "object",
                "properties": {
                    "password": {
                        "title": "password",
                        "type": "string",
                        "nullable": false,
                        "writeOnly": true
                    },
                    "email": {
                        "title": "email",
                        "type": "string",
                        "description": "No two objects may have the same value for this field.\n",
                        "nullable": false
                    },
                    "firstName": {
                        "title": "firstName",
                        "type": "string",
                        "nullable": false
                    },
                    "lastName": {
                        "title": "lastName",
                        "type": "string",
                        "nullable": false
                    },
                    "profilePicture": {
                        "title": "profilePicture",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "title": "id",
                        "type": "integer",
                        "description": "This is the primary identifier for this object.\n",
                        "nullable": false
                    },
                    "username": {
                        "title": "username",
                        "type": "string",
                        "description": "No two objects may have the same value for this field.\n",
                        "nullable": false
                    },
                    "verification": {
                        "$ref": "#/components/schemas/Verification"
                    },
                    "tokens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ManagedAuthToken"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "description": ""
            },
            "Verification": {
                "title": "Verification",
                "type": "object",
                "properties": {
                    "id": {
                        "title": "id",
                        "type": "integer",
                        "description": "This is the primary identifier for this object.\n",
                        "nullable": false
                    },
                    "code": {
                        "title": "code",
                        "type": "string",
                        "description": "No two objects may have the same value for this field.\n",
                        "nullable": false
                    },
                    "verificationState": {
                        "title": "verificationState",
                        "enum": [
                            "unverified",
                            "verified"
                        ],
                        "type": "string",
                        "default": "'unverified'",
                        "nullable": false
                    },
                    "user": {
                        "title": "user",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "description": ""
            }
        },
        "responses": {
            "InsufficientScope": {
                "description": "The provided credentials or bearer token have insufficient permission to access this route.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "The required scope for this operation."
                                }
                            }
                        }
                    }
                }
            },
            "InsufficientAccess": {
                "description": "The provided credentials or bearer token are not authorized for this request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "MalformedAuthorizationHeader": {
                "description": "The provided Authorization header was malformed.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "oauth2-client-authentication": {
                "type": "http",
                "description": "This endpoint requires an OAuth2 Client ID and Secret as the Basic Authentication username and password. If the client ID does not have a secret (public client), the password is the empty string (retain the separating colon, e.g. 'com.conduit.app:').",
                "scheme": "basic"
            },
            "oauth2": {
                "type": "oauth2",
                "description": "Standard OAuth 2.0",
                "flows": {
                    "password": {
                        "tokenUrl": "http://localhost:8888/auth/token",
                        "refreshUrl": "http://localhost:8888/auth/token",
                        "scopes": {}
                    }
                }
            }
        }
    }
}